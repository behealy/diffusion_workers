/* tslint:disable */
/* eslint-disable */
/**
 * SDXL Worker API
 * SDXL Image Generation API for RunPod serverless workers.  This API provides image generation capabilities using Stable Diffusion XL (SDXL) models with support for: - Text-to-Image generation - Image-to-Image generation   - Inpainting - ControlNet Union with 8 control modes - LoRA adapters for fine-tuned models - Multiple schedulers and configurations  The service runs on GPU-enabled infrastructure and returns high-quality generated images based on text prompts and optional control inputs. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MemoryInfoResponse,
} from '../models/index';
import {
    MemoryInfoResponseFromJSON,
    MemoryInfoResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class SystemApi extends runtime.BaseAPI {

    /**
     * Returns current GPU and system memory usage information
     * Get memory information
     */
    async getMemoryInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MemoryInfoResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/memory-info`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MemoryInfoResponseFromJSON(jsonValue));
    }

    /**
     * Returns current GPU and system memory usage information
     * Get memory information
     */
    async getMemoryInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MemoryInfoResponse> {
        const response = await this.getMemoryInfoRaw(initOverrides);
        return await response.value();
    }

}
