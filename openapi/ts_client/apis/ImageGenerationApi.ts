/* tslint:disable */
/* eslint-disable */
/**
 * SDXL Worker API
 * SDXL Image Generation API for RunPod serverless workers.  This API provides image generation capabilities using Stable Diffusion XL (SDXL) models with support for: - Text-to-Image generation - Image-to-Image generation   - Inpainting - ControlNet Union with 8 control modes - LoRA adapters for fine-tuned models - Multiple schedulers and configurations  The service runs on GPU-enabled infrastructure and returns high-quality generated images based on text prompts and optional control inputs. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ImageGenerateRequest,
  ImageGenerationResponse,
  ValidationError,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ImageGenerateRequestFromJSON,
    ImageGenerateRequestToJSON,
    ImageGenerationResponseFromJSON,
    ImageGenerationResponseToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface GenerateImageRequest {
    imageGenerateRequest: ImageGenerateRequest;
}

/**
 * 
 */
export class ImageGenerationApi extends runtime.BaseAPI {

    /**
     * Generate an image from a text prompt with optional control inputs.  Supports multiple generation modes: - **Text-to-Image**: Generate from prompt only - **Image-to-Image**: Transform an existing image - **Inpainting**: Fill masked areas of an image - **ControlNet**: Use control images to guide generation - **LoRA**: Apply fine-tuned model adapters 
     * Generate image synchronously
     */
    async generateImageRaw(requestParameters: GenerateImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImageGenerationResponse>> {
        if (requestParameters['imageGenerateRequest'] == null) {
            throw new runtime.RequiredError(
                'imageGenerateRequest',
                'Required parameter "imageGenerateRequest" was null or undefined when calling generateImage().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/generate-sync`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ImageGenerateRequestToJSON(requestParameters['imageGenerateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ImageGenerationResponseFromJSON(jsonValue));
    }

    /**
     * Generate an image from a text prompt with optional control inputs.  Supports multiple generation modes: - **Text-to-Image**: Generate from prompt only - **Image-to-Image**: Transform an existing image - **Inpainting**: Fill masked areas of an image - **ControlNet**: Use control images to guide generation - **LoRA**: Apply fine-tuned model adapters 
     * Generate image synchronously
     */
    async generateImage(requestParameters: GenerateImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImageGenerationResponse> {
        const response = await this.generateImageRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
