/* tslint:disable */
/* eslint-disable */
/**
 * SDXL Worker API
 * SDXL Image Generation API for RunPod serverless workers.  This API provides image generation capabilities using Stable Diffusion XL (SDXL) models with support for: - Text-to-Image generation - Image-to-Image generation   - Inpainting - ControlNet Union with 8 control modes - LoRA adapters for fine-tuned models - Multiple schedulers and configurations  The service runs on GPU-enabled infrastructure and returns high-quality generated images based on text prompts and optional control inputs. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageGenerationParams } from './ImageGenerationParams';
import {
    ImageGenerationParamsFromJSON,
    ImageGenerationParamsFromJSONTyped,
    ImageGenerationParamsToJSON,
    ImageGenerationParamsToJSONTyped,
} from './ImageGenerationParams';

/**
 * Request payload for image generation
 * @export
 * @interface ImageGenerateRequest
 */
export interface ImageGenerateRequest {
    /**
     * 
     * @type {ImageGenerationParams}
     * @memberof ImageGenerateRequest
     */
    input: ImageGenerationParams;
}

/**
 * Check if a given object implements the ImageGenerateRequest interface.
 */
export function instanceOfImageGenerateRequest(value: object): value is ImageGenerateRequest {
    if (!('input' in value) || value['input'] === undefined) return false;
    return true;
}

export function ImageGenerateRequestFromJSON(json: any): ImageGenerateRequest {
    return ImageGenerateRequestFromJSONTyped(json, false);
}

export function ImageGenerateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageGenerateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'input': ImageGenerationParamsFromJSON(json['input']),
    };
}

export function ImageGenerateRequestToJSON(json: any): ImageGenerateRequest {
    return ImageGenerateRequestToJSONTyped(json, false);
}

export function ImageGenerateRequestToJSONTyped(value?: ImageGenerateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'input': ImageGenerationParamsToJSON(value['input']),
    };
}

