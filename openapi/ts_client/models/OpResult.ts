/* tslint:disable */
/* eslint-disable */
/**
 * SDXL Worker API
 * SDXL Image Generation API for RunPod serverless workers.  This API provides image generation capabilities using Stable Diffusion XL (SDXL) models with support for: - Text-to-Image generation - Image-to-Image generation   - Inpainting - ControlNet Union with 8 control modes - LoRA adapters for fine-tuned models - Multiple schedulers and configurations  The service runs on GPU-enabled infrastructure and returns high-quality generated images based on text prompts and optional control inputs. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpStatus } from './OpStatus';
import {
    OpStatusFromJSON,
    OpStatusFromJSONTyped,
    OpStatusToJSON,
    OpStatusToJSONTyped,
} from './OpStatus';

/**
 * 
 * @export
 * @interface OpResult
 */
export interface OpResult {
    /**
     * Name of the operation
     * @type {string}
     * @memberof OpResult
     */
    operation: string;
    /**
     * 
     * @type {OpStatus}
     * @memberof OpResult
     */
    status: OpStatus;
    /**
     * Optional status message
     * @type {string}
     * @memberof OpResult
     */
    message?: string | null;
    /**
     * Optional operation result data
     * @type {any}
     * @memberof OpResult
     */
    result?: any | null;
}



/**
 * Check if a given object implements the OpResult interface.
 */
export function instanceOfOpResult(value: object): value is OpResult {
    if (!('operation' in value) || value['operation'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function OpResultFromJSON(json: any): OpResult {
    return OpResultFromJSONTyped(json, false);
}

export function OpResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpResult {
    if (json == null) {
        return json;
    }
    return {
        
        'operation': json['operation'],
        'status': OpStatusFromJSON(json['status']),
        'message': json['message'] == null ? undefined : json['message'],
        'result': json['result'] == null ? undefined : json['result'],
    };
}

export function OpResultToJSON(json: any): OpResult {
    return OpResultToJSONTyped(json, false);
}

export function OpResultToJSONTyped(value?: OpResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operation': value['operation'],
        'status': OpStatusToJSON(value['status']),
        'message': value['message'],
        'result': value['result'],
    };
}

