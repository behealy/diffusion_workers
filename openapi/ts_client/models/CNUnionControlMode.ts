/* tslint:disable */
/* eslint-disable */
/**
 * SDXL Worker API
 * SDXL Image Generation API for RunPod serverless workers.  This API provides image generation capabilities using Stable Diffusion XL (SDXL) models with support for: - Text-to-Image generation - Image-to-Image generation   - Inpainting - ControlNet Union with 8 control modes - LoRA adapters for fine-tuned models - Multiple schedulers and configurations  The service runs on GPU-enabled infrastructure and returns high-quality generated images based on text prompts and optional control inputs. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * ControlNet Union control mode:
 * - 0: OpenPose
 * - 1: Depth
 * - 2: HED/Scribble/Ted
 * - 3: Canny/Lineart/Anime Lineart/MLSD  
 * - 4: Normal
 * - 5: Segmentation
 * - 6: Tile
 * - 7: Inpaint
 * 
 * @export
 */
export const CNUnionControlMode = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7
} as const;
export type CNUnionControlMode = typeof CNUnionControlMode[keyof typeof CNUnionControlMode];


export function instanceOfCNUnionControlMode(value: any): boolean {
    for (const key in CNUnionControlMode) {
        if (Object.prototype.hasOwnProperty.call(CNUnionControlMode, key)) {
            if (CNUnionControlMode[key as keyof typeof CNUnionControlMode] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CNUnionControlModeFromJSON(json: any): CNUnionControlMode {
    return CNUnionControlModeFromJSONTyped(json, false);
}

export function CNUnionControlModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CNUnionControlMode {
    return json as CNUnionControlMode;
}

export function CNUnionControlModeToJSON(value?: CNUnionControlMode | null): any {
    return value as any;
}

export function CNUnionControlModeToJSONTyped(value: any, ignoreDiscriminator: boolean): CNUnionControlMode {
    return value as CNUnionControlMode;
}

